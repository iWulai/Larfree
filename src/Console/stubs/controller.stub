<?php

namespace DummyNamespace;

use Larfree\Controller;
use App\Repositories\NamespaceDummyRepository;

class DummyClass extends Controller
{
    protected $validator = [
        'store' => [
            'rules' => [
                //
            ],
            'messages' => [
                //
            ],
        ],
        'update',
    ];

    public function __construct(DummyRepository $repository)
    {
        $this->repository = $repository;
    }

    /**
     * @author iwulai
     *
     * @return \Illuminate\Contracts\Pagination\LengthAwarePaginator
     */
    public function index()
    {
        return $this->repository->paginate($this->paginator->perPage);
    }

    /**
     * @author iwulai
     *
     * @return \Larfree\Support\Model
     *
     * @throws \Larfree\Exceptions\DatabaseSaveFailedException
     */
    public function store()
    {
        return $this->repository->create($this->request->all());
    }

    /**
     * @author iwulai
     *
     * @param int $id
     *
     * @return \Larfree\Support\Model|null
     *
     * @throws \Larfree\Exceptions\ModelNotFoundException
     */
    public function show(int $id)
    {
        return $this->repository->find($id);
    }

    /**
     * @author iwulai
     *
     * @param int $id
     *
     * @return \Larfree\Support\Model
     *
     * @throws \Larfree\Exceptions\DatabaseSaveFailedException
     * @throws \Larfree\Exceptions\ModelNotFoundException
     */
    public function update(int $id)
    {
        return $this->repository->find($id, false)->save($this->request->all());
    }

    /**
     * @author iwulai
     *
     * @param int $id
     *
     * @return \Larfree\Support\Model
     *
     * @throws \Larfree\Exceptions\DatabaseSaveFailedException
     * @throws \Larfree\Exceptions\ModelNotFoundException
     */
    public function destroy(int $id)
    {
        return $this->repository->delete($id);
    }
}
